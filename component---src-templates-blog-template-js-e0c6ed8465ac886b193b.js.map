{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/blogContents.js","webpack:///./src/components/blogHeader.js"],"names":["Template","markdownRemark","data","frontmatter","html","className","dangerouslySetInnerHTML","__html","exclude","title","includeDescriptions","includeOthersButton","count","pageQuery","BlogContents","props","filteredArticles","allMarkdownRemark","edges","filter","edge","node","map","key","slug","to","date","descOnMobile","summary","v","i","length","alt","defaultProps","BlogHeader","image","ogimage"],"mappings":"8yCAAA,sJAMe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,kBAAC,IAAeF,GAChB,yBACEE,UAAU,oBACVC,wBAAyB,CAAEC,OAAQH,OAIzC,6BACA,kBAAC,IAAD,CACEI,QAASL,EAAYM,MACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,MAAO,KAKR,IAAMC,EAAS,c,mFC5BhBC,EAAe,SAACC,GACpB,IAiBMC,EAjBI,OAiBoBC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKlB,YAAYM,QAAUM,EAAMP,WAE3G,OAAO,oCACH,yBAAKH,UAAU,cACZW,EAAiBM,KAAI,SAAAF,GAAI,OACxB,wBAAIG,IAAKH,EAAKC,KAAKlB,YAAYqB,MAC7B,4BACE,kBAAC,OAAD,CAAMC,GAAIL,EAAKC,KAAKlB,YAAYqB,MAC9B,4BAAKJ,EAAKC,KAAKlB,YAAYM,OAC3B,4BAAKW,EAAKC,KAAKlB,YAAYuB,MAC1BX,EAAML,qBAAuB,uBAAGL,UAAWU,EAAMY,cAAgB,kBAAmBP,EAAKC,KAAKlB,YAAYyB,eAG1GT,QAAO,SAACU,EAAGC,GAChB,OAAKf,EAAMH,OAASkB,EAAIf,EAAMH,WAI/BG,EAAMH,OACJI,EAAiBe,OAAShB,EAAMH,OAChC,kBAAC,OAAD,CAAMP,UAAU,iBAAiBoB,GAAG,QAAQO,IAAI,oCAAhD,6BAablB,EAAamB,aAAe,CAC1BrB,MAAO,EACPF,qBAAqB,GAGRI,O,kCC5Df,iDAqBeoB,IAhBI,SAACnB,GAAD,OACf,0BAAMV,UAAU,eACd,kBAAC,IAAD,CAAKI,MAAOM,EAAMN,MAAO0B,MAAOpB,EAAMqB,UACtC,4BACE,0BAAM/B,UAAU,eAAc,kBAAC,OAAD,WAC7BU,EAAMN,OAET,4BAAKM,EAAMW","file":"component---src-templates-blog-template-js-e0c6ed8465ac886b193b.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport BlogHeader from \"../components/blogHeader\"\nimport BlogContents from '../components/blogContents'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <BlogHeader {...frontmatter}/>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n      <hr/>\n      <BlogContents\n        exclude={frontmatter.title} \n        includeDescriptions={false}\n        includeOthersButton={true} \n        count={2}/>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        ogimage\n      }\n    }\n  }\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nconst BlogContents = (props) => {\n  const data = useStaticQuery(graphql`\n  query {\n    allMarkdownRemark (sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n            summary\n          }\n        }\n      }\n    }\n  }\n  `)\n\n  const filteredArticles = data.allMarkdownRemark.edges.filter(edge => edge.node.frontmatter.title !== props.exclude)\n\n  return <>\n      <div className=\"posts-list\">\n        {filteredArticles.map(edge => \n          <ul key={edge.node.frontmatter.slug}>\n            <li>\n              <Link to={edge.node.frontmatter.slug}>\n                <h2>{edge.node.frontmatter.title}</h2>\n                <h4>{edge.node.frontmatter.date}</h4>\n                {props.includeDescriptions && <p className={props.descOnMobile && \"desc-on-mobile\"}>{edge.node.frontmatter.summary}</p>}\n              </Link>\n            </li>\n          </ul>).filter((v, i) => {\n            if (!props.count || i < props.count) return true;\n            else return false;\n          })\n        }\n        {!!props.count\n          && filteredArticles.length > props.count \n          && <Link className='more-ramblings' to=\"/blog\" alt=\"Go to complete list of articles.\">...and other ramblings</Link>}\n      </div>\n  </> \n}\n\nBlogContents.propTypes = {\n  count: PropTypes.number,\n  includeDescriptions: PropTypes.bool,\n  includeOthersButton: PropTypes.bool,\n  descOnMobile: PropTypes.bool,\n  exclude: PropTypes.string,\n}\n\nBlogContents.defaultProps = {\n  count: 0,\n  includeDescriptions: true,\n}\n\nexport default BlogContents;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\";\n\nconst BlogHeader = (props) => \n    <span className=\"blog-header\">\n      <SEO title={props.title} image={props.ogimage}/>\n      <h2>\n        <span className=\"back-button\"><Link>&#x2039;</Link></span>\n        {props.title}\n      </h2>\n      <h3>{props.date}</h3>\n    </span>\n\nBlogHeader.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  ogimage: PropTypes.string\n}\n\nexport default BlogHeader;"],"sourceRoot":""}