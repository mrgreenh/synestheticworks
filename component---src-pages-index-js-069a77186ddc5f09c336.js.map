{"version":3,"sources":["webpack:///./src/components/PlayImage.js","webpack:///./src/components/ProjectThumb.js","webpack:///./src/components/mosaic.js","webpack:///./src/components/mosaics/NFTsMosaic.js","webpack:///./src/components/mosaics/MiscMosaic.js","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/mosaics/ShortsMosaic.js","webpack:///./src/components/mosaics/MixesMosaic.js","webpack:///./src/components/blogContents.js"],"names":["PlayImage","data","className","fluid","placeholderImage","childImageSharp","ProjectThumb","props","children","imageData","title","classNames","light","dynamicClasses","reduce","acc","v","console","log","external","href","target","to","defaultProps","Mosaic","thumbnailSize","items","map","item","showTitles","NFTsMosaic","shorts","terraforming","planetaryTunnels","harvester","portalpeaks","about","twitch","instagram","facebook","soundcloud","spotify","IndexPage","image","MixesMosaic","MiscMosaic","ShortsMosaic","count","includeDescriptions","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","bookOfTeaCropped","firstFlightCropped","asteroidsFieldCropped","synesthesiaCropped","YOUTUBE_PLAYLIST_LINK","mixes","youtube","psytrance1","quickSpacewalk","BlogContents","filteredArticles","allMarkdownRemark","edges","filter","edge","node","frontmatter","exclude","slug","date","descOnMobile","summary","alt"],"mappings":"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","file":"component---src-pages-index-js-069a77186ddc5f09c336.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst PlayImage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"play_button.png\" }) {\r\n        childImageSharp {\r\n          fluid(maxHeight: 150) {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return <span className=\"play-image\"><Img fluid={data.placeholderImage.childImageSharp.fluid}/></span>\r\n}\r\n\r\nexport default PlayImage\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"gatsby\";\r\nimport Img from \"gatsby-image\"\r\nimport PlayImage from './PlayImage'\r\nimport classNames from \"classnames\";\r\n\r\nconst ProjectThumb = (props) => {\r\n  const children = <>\r\n    <Img fluid={props.imageData.childImageSharp.fluid}/>\r\n    <div className=\"thumb-overlay\"/>\r\n    {!!props.title && <h3 className={classNames({\"light\": !!props.light})}>{props.title}</h3>}\r\n    <PlayImage/>\r\n  </>;\r\n\r\n  const dynamicClasses = (props.className || []).reduce((acc, v) => {acc[v] = true; return acc}, { \"project-thumb\": true })\r\n\r\n  console.log(dynamicClasses)\r\n  return <div className={classNames(dynamicClasses)}>\r\n    {!props.external ? \r\n      <Link to={props.href}>\r\n        {children}\r\n      </Link> : \r\n      <a href={props.href} target=\"_blank\">\r\n        {children}\r\n      </a>\r\n    }\r\n\r\n  </div>};\r\n\r\nProjectThumb.propTypes = {\r\n  imageData: PropTypes.object,\r\n  title: PropTypes.string,\r\n  href: PropTypes.string,\r\n  light: PropTypes.bool,\r\n  external: PropTypes.bool,\r\n  className: PropTypes.array,\r\n}\r\n\r\nProjectThumb.defaultProps = {\r\n  light: true,\r\n}\r\n\r\nexport default ProjectThumb;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport ProjectThumb from './ProjectThumb';\r\n\r\nimport './mosaic.scss';\r\n\r\nconst Mosaic = (props) => <div className={classNames({\r\n    \"carousel\": true,\r\n    \"small-thumbs\": props.thumbnailSize == \"small\",\r\n  })}>\r\n  {props.items.map(item => <ProjectThumb {...item} title={props.showTitles ? item.title : null}/>)}\r\n</div>;\r\n\r\nMosaic.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    imageData: PropTypes.object,\r\n    title: PropTypes.string,\r\n    href: PropTypes.string,\r\n    light: PropTypes.bool,\r\n    external: PropTypes.bool,\r\n    className: PropTypes.array,\r\n  })),\r\n  thumbnailSize: PropTypes.oneOf(['small', 'large']),\r\n  showTitles: PropTypes.bool,\r\n}\r\n\r\nMosaic.defaultProps = {\r\n  items: [],\r\n  thumbnailSize: 'large',\r\n  showTitles: true,\r\n}\r\n\r\nexport default Mosaic;","import React from 'react';\r\nimport Mosaic from '../mosaic';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst NFTsMosaic = () => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    terraforming: file(relativePath: { eq: \"nft_thumbs/ancient_path_purple.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    },\r\n    planetaryTunnels: file(relativePath: { eq: \"nft_thumbs/planetary_bridges_full.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    },\r\n    harvester: file(relativePath: { eq: \"nft_thumbs/harvester_full.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    },\r\n    portalpeaks: file(relativePath: { eq: \"nft_thumbs/portal_peaks_daytime.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    },\r\n  }\r\n  `)\r\n\r\n  const shorts =[\r\n    {\r\n      title: \"Terraforming\",\r\n      imageData: data.terraforming,\r\n      href: \"/nft/terraforming/\",\r\n      light: true,\r\n    },\r\n    {\r\n      title: \"Planetary Bridges\",\r\n      imageData: data.planetaryTunnels,\r\n      href: \"/nft/planetarybridges/\",\r\n      light: true,\r\n    },\r\n    {\r\n      title: \"Harvester\",\r\n      imageData: data.harvester,\r\n      href: \"/nft/harvester/\",\r\n      light: true,\r\n    },\r\n    {\r\n      title: \"Portal Peaks\",\r\n      imageData: data.portalpeaks,\r\n      href: \"/nft/portalpeaks/\",\r\n      light: true,\r\n    },\r\n  ]\r\n\r\n  return <Mosaic showTitles={true} items={shorts}/>\r\n};\r\n\r\nexport default NFTsMosaic;","import React from 'react';\r\nimport Mosaic from '../mosaic';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst NFTsMosaic = () => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    instagram: file(relativePath: { eq: \"instagram.png\" }) {\r\n        childImageSharp {\r\n        fluid(maxWidth: 100) {\r\n            ...GatsbyImageSharpFluid\r\n        }\r\n        }\r\n    },\r\n    facebook: file(relativePath: { eq: \"facebook.png\" }) {\r\n        childImageSharp {\r\n        fluid(maxWidth: 100) {\r\n            ...GatsbyImageSharpFluid\r\n        }\r\n        }\r\n    },\r\n    spotify: file(relativePath: { eq: \"spotify.png\" }) {\r\n        childImageSharp {\r\n        fluid(maxWidth: 100) {\r\n            ...GatsbyImageSharpFluid\r\n        }\r\n        }\r\n    },\r\n    soundcloud: file(relativePath: { eq: \"soundcloud.png\" }) {\r\n      childImageSharp {\r\n      fluid(maxWidth: 100) {\r\n          ...GatsbyImageSharpFluid\r\n      }\r\n      }\r\n    },\r\n    about: file(relativePath: { eq: \"synwrks_profile_pic_no_frills.png\" }) {\r\n      childImageSharp {\r\n      fluid(maxWidth: 100) {\r\n          ...GatsbyImageSharpFluid\r\n      }\r\n      }\r\n    },\r\n    twitch: file(relativePath: { eq: \"twitch.png\" }) {\r\n      childImageSharp {\r\n      fluid(maxWidth: 100) {\r\n          ...GatsbyImageSharpFluid\r\n      }\r\n      }\r\n    },\r\n  }\r\n  `)\r\n\r\n  const shorts =[\r\n    {\r\n      title: \"About\",\r\n      imageData: data.about,\r\n      href: \"/about/\",\r\n      light: false,\r\n      className: [\"website-logo\", \"nopadding\"]\r\n    },\r\n    {\r\n      title: \"Events >>\",\r\n      imageData: data.twitch,\r\n      href: \"https://www.twitch.tv/synwrks/schedule\",\r\n      light: true,\r\n      external: true,\r\n      className: [\"website-logo\"]\r\n    },\r\n    {\r\n      imageData: data.instagram,\r\n      href: \"https://www.instagram.com/synwrks/\",\r\n      light: true,\r\n      external: true,\r\n      className: [\"website-logo\"]\r\n    },\r\n    {\r\n      imageData: data.facebook,\r\n      href: \"https://bit.ly/synwrks-facebook\",\r\n      light: true,\r\n      external: true,\r\n      className: [\"website-logo\"]\r\n    },\r\n    {\r\n      title: \"Tracks >>\",\r\n      imageData: data.soundcloud,\r\n      href: \"https://soundcloud.com/synwrks\",\r\n      light: true,\r\n      external: true,\r\n      className: [\"website-logo\"]\r\n    },\r\n    {\r\n      imageData: data.spotify,\r\n      href: \"https://open.spotify.com/artist/1IkV119B5J0dgRzNiyu3FK?si=yazckQCFSemWAT1aoIpLrQ\",\r\n      light: true,\r\n      external: true,\r\n      className: [\"website-logo\"]\r\n    },\r\n    \r\n  ]\r\n\r\n  return <Mosaic showTitles={true} items={shorts} thumbnailSize=\"small\"/>\r\n};\r\n\r\nexport default NFTsMosaic;","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport \"./index.scss\"\r\nimport ShortsMosaic from \"../components/mosaics/ShortsMosaic\"\r\nimport MixesMosaic from \"../components/mosaics/MixesMosaic\"\r\nimport NFTsMosaic from \"../components/mosaics/NFTsMosaic\"\r\nimport MiscMosaic from \"../components/mosaics/MiscMosaic\"\r\nimport BlogContents from \"../components/blogContents\"\r\n\r\nconst IndexPage = () => {  \r\n  return (\r\n    <Layout>\r\n        <SEO title={\"Home\"} image={\"/home.png\"}/>\r\n        <div className=\"home-mosaic-container\">\r\n          <MixesMosaic/>\r\n          <h2 className={\"inset\"}>Visual DJ Mixes</h2>\r\n        </div>\r\n        <div className=\"home-mosaic-container\">\r\n          <MiscMosaic/>\r\n        </div>\r\n        <div className=\"home-mosaic-container\">\r\n          <ShortsMosaic/>\r\n          <h2 className={\"inset\"}>VR & Music Videos</h2>\r\n        </div>\r\n        <div className=\"home-mosaic-container\">\r\n          <NFTsMosaic/>\r\n          <h2 className={\"inset\"}>Places</h2>\r\n        </div>\r\n        <div className=\"home-mosaic-container\">\r\n          <h2>Blog</h2>\r\n        </div>\r\n        <BlogContents count={2} includeDescriptions={true}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\"\nimport Mosaic from \"../mosaic\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst ShortsMosaic = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      asteroidsFieldCropped: file(\n        relativePath: { eq: \"asteroid-field-cropped.png\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      synesthesiaCropped: file(\n        relativePath: { eq: \"synesthesia_cropped.png\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      firstFlightCropped: file(relativePath: { eq: \"promenade.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      bookOfTeaCropped: file(relativePath: { eq: \"thebookoftea.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const shorts = [\n    {\n      title: \"The Book of Tea\",\n      imageData: data.bookOfTeaCropped,\n      href: \"/thebookoftea/\",\n    },\n    {\n      title: \"First Flight\",\n      imageData: data.firstFlightCropped,\n      href: \"/firstflight/\",\n    },\n    {\n      title: \"A Blue Dwarf's Tale\",\n      imageData: data.asteroidsFieldCropped,\n      href: \"/abluedwarftale/\",\n      light: true,\n    },\n    {\n      title: \"Synesthesia #1\",\n      imageData: data.synesthesiaCropped,\n      href: \"/synesthesia1/\",\n    },\n  ]\n\n  return <Mosaic items={shorts} />\n}\n\nexport default ShortsMosaic\n","import React from 'react';\r\nimport Mosaic from '../mosaic';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst MixesMosaic = () => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    youtube: file(relativePath: { eq: \"youtube_thumb.png\" }) {\r\n      childImageSharp {\r\n      fluid(maxWidth: 100) {\r\n          ...GatsbyImageSharpFluid\r\n      }\r\n      }\r\n    },\r\n    twitch: file(relativePath: { eq: \"twitch_thumb.png\" }) {\r\n      childImageSharp {\r\n      fluid(maxWidth: 100) {\r\n          ...GatsbyImageSharpFluid\r\n      }\r\n      }\r\n    },\r\n    journeyWithin: file(relativePath: { eq: \"journey_within_mix.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    },\r\n    boosterShot: file(relativePath: { eq: \"booster_shot_mix.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    psytrance1: file(relativePath: { eq: \"psytrance_1_mix.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    quickSpacewalk: file(relativePath: { eq: \"a_quick_spacewalk.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `)\r\n\r\n  const YOUTUBE_PLAYLIST_LINK = \"https://youtube.com/playlist?list=PL7gzsMg4b2X4iWNK8AsWMRBaGOgxruCe7\"\r\n\r\n  const mixes =[\r\n    {\r\n      title: \"Live! ^^^\",\r\n      imageData: data.twitch,\r\n      href: \"https://www.twitch.tv/synwrks\",\r\n      external: true,\r\n      light: false,\r\n    },\r\n    {\r\n      title: \"Recordings >>>\",\r\n      imageData: data.youtube,\r\n      href: YOUTUBE_PLAYLIST_LINK,\r\n      external: true,\r\n      light: false,\r\n    },\r\n    // {\r\n    //   imageData: data.journeyWithin,\r\n    //   href: YOUTUBE_PLAYLIST_LINK,\r\n    //   external: true,\r\n    //   light: true,\r\n    // },\r\n    {\r\n      imageData: data.psytrance1,\r\n      href: YOUTUBE_PLAYLIST_LINK,\r\n      external: true,\r\n      light: true,\r\n    },\r\n    {\r\n      imageData: data.quickSpacewalk,\r\n      href: YOUTUBE_PLAYLIST_LINK,\r\n      external: true,\r\n      light: true,\r\n    },\r\n  ]\r\n\r\n  return <Mosaic items={mixes}/>\r\n};\r\n\r\nexport default MixesMosaic;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst BlogContents = (props) => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    allMarkdownRemark (sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `)\r\n\r\n  const filteredArticles = data.allMarkdownRemark.edges.filter(edge => edge.node.frontmatter.title !== props.exclude)\r\n\r\n  return <>\r\n      <div className=\"posts-list\">\r\n        {filteredArticles.map(edge => \r\n          <ul key={edge.node.frontmatter.slug}>\r\n            <li>\r\n              <Link to={edge.node.frontmatter.slug}>\r\n                <h2>{edge.node.frontmatter.title}</h2>\r\n                <h4>{edge.node.frontmatter.date}</h4>\r\n                {props.includeDescriptions && <p className={props.descOnMobile && \"desc-on-mobile\"}>{edge.node.frontmatter.summary}</p>}\r\n              </Link>\r\n            </li>\r\n          </ul>).filter((v, i) => {\r\n            if (!props.count || i < props.count) return true;\r\n            else return false;\r\n          })\r\n        }\r\n        {!!props.count\r\n          && filteredArticles.length > props.count \r\n          && <Link className='more-ramblings' to=\"/blog\" alt=\"Go to complete list of articles.\">...and other ramblings</Link>}\r\n      </div>\r\n  </> \r\n}\r\n\r\nBlogContents.propTypes = {\r\n  count: PropTypes.number,\r\n  includeDescriptions: PropTypes.bool,\r\n  includeOthersButton: PropTypes.bool,\r\n  descOnMobile: PropTypes.bool,\r\n  exclude: PropTypes.string,\r\n}\r\n\r\nBlogContents.defaultProps = {\r\n  count: 0,\r\n  includeDescriptions: true,\r\n}\r\n\r\nexport default BlogContents;"],"sourceRoot":""}