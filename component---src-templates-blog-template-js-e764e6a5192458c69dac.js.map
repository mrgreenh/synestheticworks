{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/blogContents.js","webpack:///./src/components/blogHeader.js"],"names":["Template","markdownRemark","data","frontmatter","html","className","dangerouslySetInnerHTML","__html","exclude","title","includeDescriptions","includeOthersButton","count","pageQuery","BlogContents","props","filteredArticles","allMarkdownRemark","edges","filter","edge","node","map","key","slug","to","date","descOnMobile","summary","v","i","length","alt","defaultProps","BlogHeader","image","ogimage"],"mappings":"8yCAAA,sJAMe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,kBAAC,IAAeF,GAChB,yBACEE,UAAU,oBACVC,wBAAyB,CAAEC,OAAQH,OAIzC,6BACA,kBAAC,IAAD,CACEI,QAASL,EAAYM,MACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,MAAO,KAKR,IAAMC,EAAS,c,mFC5BhBC,EAAe,SAACC,GACpB,IAiBMC,EAjBI,OAiBoBC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKlB,YAAYM,QAAUM,EAAMP,WAE3G,OAAO,oCACH,yBAAKH,UAAU,cACZW,EAAiBM,KAAI,SAAAF,GAAI,OACxB,wBAAIG,IAAKH,EAAKC,KAAKlB,YAAYqB,MAC7B,4BACE,kBAAC,OAAD,CAAMC,GAAIL,EAAKC,KAAKlB,YAAYqB,MAC9B,4BAAKJ,EAAKC,KAAKlB,YAAYM,OAC3B,4BAAKW,EAAKC,KAAKlB,YAAYuB,MAC1BX,EAAML,qBAAuB,uBAAGL,UAAWU,EAAMY,cAAgB,kBAAmBP,EAAKC,KAAKlB,YAAYyB,eAG1GT,QAAO,SAACU,EAAGC,GAChB,OAAKf,EAAMH,OAASkB,EAAIf,EAAMH,WAI/BG,EAAMH,OACJI,EAAiBe,OAAShB,EAAMH,OAChC,kBAAC,OAAD,CAAMP,UAAU,iBAAiBoB,GAAG,QAAQO,IAAI,oCAAhD,6BAablB,EAAamB,aAAe,CAC1BrB,MAAO,EACPF,qBAAqB,GAGRI,O,kCC5Df,iDAqBeoB,IAhBI,SAACnB,GAAD,OACf,0BAAMV,UAAU,eACd,kBAAC,IAAD,CAAKI,MAAOM,EAAMN,MAAO0B,MAAOpB,EAAMqB,UACtC,4BACE,0BAAM/B,UAAU,eAAc,kBAAC,OAAD,WAC7BU,EAAMN,OAET,4BAAKM,EAAMW","file":"component---src-templates-blog-template-js-e764e6a5192458c69dac.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport BlogHeader from \"../components/blogHeader\"\r\nimport BlogContents from '../components/blogContents'\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <Layout>\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"blog-post\">\r\n          <BlogHeader {...frontmatter}/>\r\n          <div\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <hr/>\r\n      <BlogContents\r\n        exclude={frontmatter.title} \r\n        includeDescriptions={false}\r\n        includeOthersButton={true} \r\n        count={2}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        slug\r\n        title\r\n        ogimage\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst BlogContents = (props) => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    allMarkdownRemark (sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `)\r\n\r\n  const filteredArticles = data.allMarkdownRemark.edges.filter(edge => edge.node.frontmatter.title !== props.exclude)\r\n\r\n  return <>\r\n      <div className=\"posts-list\">\r\n        {filteredArticles.map(edge => \r\n          <ul key={edge.node.frontmatter.slug}>\r\n            <li>\r\n              <Link to={edge.node.frontmatter.slug}>\r\n                <h2>{edge.node.frontmatter.title}</h2>\r\n                <h4>{edge.node.frontmatter.date}</h4>\r\n                {props.includeDescriptions && <p className={props.descOnMobile && \"desc-on-mobile\"}>{edge.node.frontmatter.summary}</p>}\r\n              </Link>\r\n            </li>\r\n          </ul>).filter((v, i) => {\r\n            if (!props.count || i < props.count) return true;\r\n            else return false;\r\n          })\r\n        }\r\n        {!!props.count\r\n          && filteredArticles.length > props.count \r\n          && <Link className='more-ramblings' to=\"/blog\" alt=\"Go to complete list of articles.\">...and other ramblings</Link>}\r\n      </div>\r\n  </> \r\n}\r\n\r\nBlogContents.propTypes = {\r\n  count: PropTypes.number,\r\n  includeDescriptions: PropTypes.bool,\r\n  includeOthersButton: PropTypes.bool,\r\n  descOnMobile: PropTypes.bool,\r\n  exclude: PropTypes.string,\r\n}\r\n\r\nBlogContents.defaultProps = {\r\n  count: 0,\r\n  includeDescriptions: true,\r\n}\r\n\r\nexport default BlogContents;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SEO from \"../components/seo\"\r\nimport { Link } from \"gatsby\";\r\n\r\nconst BlogHeader = (props) => \r\n    <span className=\"blog-header\">\r\n      <SEO title={props.title} image={props.ogimage}/>\r\n      <h2>\r\n        <span className=\"back-button\"><Link>&#x2039;</Link></span>\r\n        {props.title}\r\n      </h2>\r\n      <h3>{props.date}</h3>\r\n    </span>\r\n\r\nBlogHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  date: PropTypes.string,\r\n  ogimage: PropTypes.string\r\n}\r\n\r\nexport default BlogHeader;"],"sourceRoot":""}